{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/src/runtime/internal/utils.js","../../node_modules/svelte/src/runtime/internal/dom.js","../../node_modules/svelte/src/runtime/internal/lifecycle.js","../../node_modules/svelte/src/runtime/internal/scheduler.js","../../node_modules/svelte/src/runtime/internal/transitions.js","../../node_modules/svelte/src/runtime/internal/each.js","../../node_modules/svelte/src/runtime/internal/Component.js","../../node_modules/svelte/src/runtime/internal/disclose-version/index.js","../../node_modules/svelte/src/shared/version.js","../../node_modules/svelte/src/runtime/store/index.js","../../src/stores.js","../../src/components/LastFmForm.svelte","../../src/components/StreamingLogin.svelte","../../src/components/CreatePlaylist.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\nimport { contenteditable_truthy_values, has_prop } from './utils.js';\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst myChildren = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmyChildren.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = myChildren;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seqLen =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seqLen] + 1;\n\t\tconst newLen = seqLen + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[newLen] = i;\n\t\tlongest = Math.max(newLen, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst toMove = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\ttoMove.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\ttoMove.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\ttoMove.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < toMove.length; i++) {\n\t\twhile (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(toMove[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tif (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} processNode\n * @param {() => R} createNode\n * @param {boolean} dontUpdateLastIndex\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst resultNode = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = processNode(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dontUpdateLastIndex) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = processNode(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dontUpdateLastIndex) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn createNode();\n\t})();\n\tresultNode.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn resultNode;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst dataStr = '' + data;\n\t\t\tif (node.data.startsWith(dataStr)) {\n\t\t\t\tif (node.data.length !== dataStr.length) {\n\t\t\t\t\treturn node.splitText(dataStr.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = dataStr;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n/** @returns {void} */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\tconst nodes = children(options.target);\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.1.2';\nexport const PUBLIC_VERSION = '4';\n","import {\n\trun_all,\n\tsubscribe,\n\tnoop,\n\tsafe_not_equal,\n\tis_function,\n\tget_store_value\n} from '../internal/index.js';\n\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#readable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#writable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {import('./public.js').Unsubscriber} */\n\tlet stop;\n\t/** @type {Set<import('./private.js').SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\t/** @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./public.js').Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(value));\n\t}\n\n\t/**\n\t * @param {import('./public.js').Subscriber<T>} run\n\t * @param {import('./private.js').Invalidator<T>} [invalidate]\n\t * @returns {import('./public.js').Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {import('./private.js').SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(value);\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>, set: (value: T) => void, update: (fn: import('./public.js').Updater<T>) => void) => import('./public.js').Unsubscriber | void} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>) => T} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * @template {import('./private.js').Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<import('./public.js').Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = is_function(result) ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * https://svelte.dev/docs/svelte-store#readonly\n * @template T\n * @param {import('./public.js').Readable<T>} store  - store to make readonly\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\nexport { get_store_value as get };\n","import { readable, writable } from \"svelte/store\";\n\nexport const token = readable(null, function start(set) {\n  const hashParams = {};\n  const r = /([^&;=]+)=?([^&;]*)/g;\n  const q = window.location.hash.substring(1);\n  let e;\n  while ((e = r.exec(q))) {\n    hashParams[e[1]] = decodeURIComponent(e[2]);\n  }\n  const access_token = hashParams.access_token;\n  set(access_token);\n\n  window.history.pushState(\"object or string\", \"Title\", \"/\");\n});\n\nexport const appUrl = readable(null, function start(set) {\n  if (process.env == \"prod\") {\n    set(\"https://leorehm.github.io/lastfm-spotify\");\n  } else {\n    set(\"http://localhost:8080/\");\n    console.log(`environment set to ${process.env}`);\n  }\n});\n\nexport const timeRange = writable(\"medium_term\");\n\nexport const tokenExpired = writable(false);\n\nexport const trackdata = writable(null);\n","<script>\n  import { timeRange, token, tokenExpired, trackdata } from \"../stores.js\";\n\n  $: username = \"\";\n\n  const period = [\"overall\", \"7day\", \"1month\", \"3month\", \"6month\", \"12month\"];\n  \n  const apiKey = process.env.LASTFM_API_KEY;\n\n  let chosenPeriod = \"7day\";\n  let limit = 20;\n  let __trackdata;\n  let output = \"\";\n  let nextButtonDisabled = true;\n\n  async function onSubmit() {\n    // console.log(\"username: \", username);\n\n    try {\n      __trackdata = await fetchLfmData();\n    } catch (e) {\n      output = trackdata.toString();\n      return;\n    }\n\n    if (output != \"\") output = \"\";\n\n    for (let i = 0; i < __trackdata.length; i++) {\n      output += i + 1 + \": \";\n      output += __trackdata[i].artist.name + \" - \";\n      output += __trackdata[i].name + \"\\r\\n\";\n    }\n\n    if (output == \"\") {\n      output = \"It seems there are no songs available for the selected username and/or time period.\";\n      nextButtonDisabled = true;\n      return;\n    }\n    nextButtonDisabled = false;\n  }\n\n  function onNext() {\n    $trackdata = __trackdata;\n  }\n\n  // TODO: input username, period, limit and api key as parameter with URLSeachParams()\n  async function fetchLfmData() {\n    let res;\n    \n    // console.log(\"fetching last.fm data...\");\n\n    const url =\n      \"https://ws.audioscrobbler.com/2.0/?method=user.gettoptracks&user=\" +\n      username +\n      \"&period=\" +\n      chosenPeriod +\n      \"&limit=\" +\n      limit +\n      \"&api_key=\" +\n      apiKey +\n      \"&format=json\";\n    await fetch(url)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(\"No songs found. User may not exist or have songs scrobbled during the selected timeframe.\");\n      })\n      .then((data) => {\n        res = data.toptracks.track;\n        // console.log(\"...done!\");\n      })\n      .catch((error) => {\n        console.log(error);\n        res = error;\n      });\n    return res;\n  }\n</script>\n\n<div class=\"container\">\n  <form class=\"item-form\" on:submit|preventDefault={onSubmit}>\n    <div>\n      <label class=\"form-label\" for=\"username\">last.fm Username</label>\n      <input class=\"form-input\" name=\"username\" type=\"text\" bind:value={username} /><br />\n    </div>\n    <div>\n      <label class=\"form-label\" for=\"limit\">Track Limit</label>\n      <input class=\"form-input\" name=\"limit\" type=\"number\" bind:value={limit} min=\"1\" max=\"100\" /><br />\n    </div>\n    <div>\n      <label class=\"form-label\" for=\"period\">Time Period</label>\n      <select class=\"form-input\" name=\"period\" bind:value={chosenPeriod}>\n        {#each period as period}\n          <option>{period}</option>\n        {/each}\n      </select><br />\n    </div>\n  </form>\n  <button class=\"pure-button-primary\" id=\"submit-button\" disbaled={(username = \"\")} on:click={onSubmit}\n    >Get Data <i class=\"fa-brands fa-lastfm\" /></button\n  >\n\n  <div class=\"item-output\">\n    <label for=\"output\" class=\"form-label\">Songs retrieved from last.fm</label>\n    <textarea readonly id=\"song-output\" name=\"song-output\" rows=\"limit\" cols=\"50\" bind:value={output} />\n  </div>\n  <button class=\"pure-button-primary\" id=\"next-button\" disabled={nextButtonDisabled} on:click={onNext}>Next</button>\n</div>\n\n<style>\n  .container {\n    /* display: grid;\n\t\tgrid-template-columns: 1fr 1fr, 1fr; */\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    flex-basis: auto;\n    align-items: center;\n    align-content: center;\n  }\n  .form-label {\n    margin: 10px 0 10px 0;\n    font-weight: bold;\n    text-align: center;\n  }\n  .form-input {\n    grid-row: 1;\n    height: 2.2em;\n    width: 15rem;\n  }\n  #song-output {\n    /* height: 10em;\n\t\twidth: 95vw; */\n    height: 20rem;\n    width: 15rem;\n  }\n  #submit-button {\n    /* height: 2em;\n\t\twidth: 80% */\n    margin: 10px 0 10px 0;\n    width: 15rem;\n  }\n  #next-button {\n    /* height: 2em;\n\t\twidth: 20em;\n\t\ttransform: translate(50%, 50%);\n\t\tleft: 50%; */\n    margin: 10px 0 10px 0;\n    width: 15rem;\n  }\n  .pure-button-primary {\n    border-radius: 12px;\n  }\n</style>\n","<script>\n  import { token, tokenExpired, appUrl } from \"../stores.js\";\n\n  const client_id = process.env.SPOTIFY_CLIENT_ID;\n\n  function generateRandomString(length) {\n    let text = \"\";\n    const possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    for (let i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  }\n\n  const url = new URL(\"https://accounts.spotify.com/authorize?\");\n  const scope = \"user-read-private playlist-modify-public playlist-modify-private\";\n  const state = generateRandomString(16);\n  let rememberMe = true;\n\n  $: params = new URLSearchParams({\n    response_type: \"token\",\n    show_dialog: !rememberMe, // Will show up on first sign-on regardless\n    client_id,\n    scope,\n    redirect_uri: $appUrl,\n    state,\n  });\n\n  $: loginLink = url + params;\n</script>\n\n{#if !$token}\n  <div id=\"login\">\n    <a href={loginLink}>\n      <button class=\"pure-button pure-button-primary\" id=\"login-btn\">Login with Spotify</button>\n    <br />\n    <div id=\"checkbox-container\">\n      <label id=\"checkbox-label\" for=\"remember-me\">Remember me?</label>\n      <input id=\"checkbox-box\" name=\"remember-me\" type=\"checkbox\" bind:checked={rememberMe} />\n    </div>\n  </div>\n{/if}\n\n{#if $tokenExpired}\n  <section class=\"expired-token\">\n    <p>Token expired! Please log out and log back in again.</p>\n    <a href={$appUrl}>\n      <button>Logout</button>\n    </a>\n  </section>\n{/if}\n\n<style>\n  #login {\n    margin: auto;\n    width: 50%;\n    padding: 10px;\n    /* align-items: center;\n  display: flex;\n  justify-content: center; */\n  }\n  #login-btn {\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n    height: 3rem;\n    padding-left: 10px;\n    padding-right: 10px;\n\n    font-weight: bold;\n    font-size: 125%;\n  }\n\n  .pure-button-primary {\n    border-radius: 12px;\n  }\n  #checkbox-container {\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%);\n  }\n  #checkbox-label {\n    display: inline-block;\n    text-align: center;\n    margin: auto;\n    font-weight: bold;\n  }\n\n  #checkbox-box {\n    display: inline-block;\n    margin: auto;\n  }\n</style>\n","<script>\n  import { token, timeRange, tokenExpired, trackdata } from \"../stores.js\";\n  let playlistName = \"last.fm top \" + $trackdata.length;\n  let playlistDesc = \"\";\n  let playlistScope = true; // true: public, false: private\n  let playlistLink = \"\";\n  let user_id;\n  let playlistInfo;\n  let message = \"\";\n  let failedTracksIndices = [];\n  let failedOutput = \"\";\n  const spotInsertRest = 100; // spotify restriction of only 100 songs per insertion\n\n  // removes \" ' \" \" { \" and \" } \" from a given string as spotify cant handle them in the track name\n  async function transformStringForSpotify(string) {\n    let result = string.replace(/['{}]/g, \"\");\n    return result;\n  }\n\n  async function getUser() {\n    message = \"Please wait: getting user data...\";\n    const accessToken = $token;\n\n    const res = await fetch(\"https://api.spotify.com/v1/me\", {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + accessToken,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        user_id = data.id;\n      });\n  }\n\n  async function createPlaylist() {\n    // https://developer.spotify.com/documentation/web-api/reference/#/operations/create-playlist\n    await getUser();\n    message = \"Please wait: Playlist is being created...\";\n    console.log(\"creating playlist for user \", user_id);\n    const accessToken = $token;\n\n    const res = await fetch(`https://api.spotify.com/v1/users/${user_id}/playlists`, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + accessToken,\n      },\n      body: JSON.stringify({\n        name: playlistName,\n        public: playlistScope,\n        description: playlistDesc,\n        public: false,\n      }),\n    });\n\n    if (res.ok) {\n      playlistInfo = await res.json();\n    } else {\n      tokenExpired.set(true);\n    }\n\n    addToPlaylist();\n  }\n\n  async function getSongId(track, artist) {\n    // https://developer.spotify.com/documentation/web-api/reference/#/operations/search\n    // query could be optimized for higher accuracy\n\n    // console.log(\"searching for: \", track, \" - \", artist);\n\n    // fixes spotify not finding some songs via search endpoint\n    // see https://github.com/leorehm/lastfm-spotify/issues/7\n    track = await transformStringForSpotify(track);\n\n    const url = `https://api.spotify.com/v1/search?q=track:${track}%20artist:${artist}&type=track&limit=5`;\n    const accessToken = $token;\n    let id;\n    const res = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + accessToken,\n      },\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(\"Track '\" + track + \"' not found - skipping\");\n      })\n      .then((data) => {\n        if (data.tracks.items.length == 0) {\n          console.log(data);\n          throw new Error(\"Track '\" + track + \"' not found - skipping. Response: \");\n        } else {\n          console.log(\"track_id found: \", data.tracks.items[0].uri);\n          id = data.tracks.items[0].uri;\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        id = null;\n      });\n    return id;\n  }\n\n  async function addToPlaylist() {\n    // https://developer.spotify.com/documentation/web-api/reference/#/operations/add-tracks-to-playlist\n    message = \"Please wait: Getting songs...\";\n\n    // get all song ids\n    // group ids in arrays with length of spotInsertRest to comply with spotify api\n\n    const indexesNeeded = Math.floor(($trackdata.length - 1) / spotInsertRest); //counting from 0\n    const ids = new Array(Math.floor(indexesNeeded));\n    for (let i = 0; i <= indexesNeeded; i++) {\n      ids[i] = [];\n    }\n\n    for (let i = 0; i < $trackdata.length; i++) {\n      let j = Math.floor(i / spotInsertRest);\n      let songId = await getSongId($trackdata[i].name, $trackdata[i].artist.name);\n      // prevents adding a song with an empty id, which would cause the whole api-call to fail\n      if (songId != null) {\n        ids[j].push(songId);\n      } else {\n        failedTracksIndices.push(i);\n      }\n    }\n    // console.log(\"finished getting track ids:\", ids);\n\n    // add songs to playlist\n    message = \"Please wait: Adding songs to playlist...\";\n\n    const accessToken = $token;\n    const url = `https://api.spotify.com/v1/playlists/${playlistInfo.id}/tracks`;\n\n    for (let i = 0; i < ids.length; i++) {\n      const res = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          Authorization: \"Bearer \" + accessToken,\n        },\n        body: JSON.stringify({\n          uris: ids[i],\n        }),\n      })\n        .then((response) => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error(\"Adding to playlist not successful\");\n        })\n        .then((data) => {\n          console.log(\"add to playlist RESPONSE: \", data);\n        })\n        .catch((error) => {\n          console.log(error);\n          message = \"Oh no, something went wrong!\";\n        });\n    }\n\n    playlistLink = playlistInfo.external_urls.spotify;\n    if (failedTracksIndices.length == 0) {\n      message = \"Success!\";\n    } else {\n      let plural = \"\";\n      if (failedTracksIndices.length > 1) {\n        plural = \"s\";\n      }\n      if (failedOutput != \"\") {\n        failedOutput = \"\";\n      }\n\n      for (let i = 0; i < failedTracksIndices.length; i++) {\n        failedOutput += failedTracksIndices[i] + 1 + \": \";\n        failedOutput += $trackdata[failedTracksIndices[i]].artist.name + \" - \";\n        failedOutput += $trackdata[failedTracksIndices[i]].name + \"\\r\\n\";\n      }\n\n      message = \"Failed to add \" + failedTracksIndices.length + \" track\" + plural + \" :(\";\n    }\n  }\n</script>\n\n<div class=\"container\">\n  <label class=\"label\" for=\"playlist-name\">Playlist Name</label>\n  <input class=\"input\" name=\"playlist-name\" type=\"text\" bind:value={playlistName} /><br />\n\n  <label class=\"label\" for=\"playlist-desc\">Description</label>\n  <input class=\"input\" name=\"playlist-desc\" type=\"text\" bind:value={playlistDesc} /><br />\n\n  <label for=\"playlist-scope\" class=\"label\">Visibility</label>\n  <div name=\"playlist-scope\" class=\"pure-button-group\" role=\"group\">\n    <button\n      id=\"public-button\"\n      class=\"toggle-button\"\n      class:active={playlistScope}\n      on:click={() => (playlistScope = !playlistScope)}>Public</button\n    >\n    <button\n      id=\"private-button\"\n      class=\"toggle-button\"\n      class:active={!playlistScope}\n      on:click={() => (playlistScope = !playlistScope)}>Private</button\n    >\n  </div>\n\n  <button class=\"pure-button-primary\" on:click|once={createPlaylist}\n    >Create Playlist <i class=\"fa-brands fa-spotify\" /></button\n  >\n\n  <p style=\"margin: 10px 0 10px 0;\">{message}</p>\n\n  {#if playlistLink != \"\"}\n    <div class=\"playlist-link\">\n      <label for=\"playlist-link\" class=\"label\">Playlist Link</label>\n      <input name=\"playlist-link\" type=\"text\" class=\"input\" bind:value={playlistLink} /><br />\n      <a href={playlistLink}\n        ><button class=\"pure-button-primary\" href={playlistLink}\n          >Open Playlist <i class=\"fa-brands fa-spotify\" /></button\n        ></a\n      >\n    </div>\n\n    {#if failedOutput != \"\"}\n      <div class=\"item-output\">\n        <label for=\"failedOutput\" class=\"form-label\">Missing tracks</label>\n        <textarea readonly id=\"song-output\" name=\"song-output\" rows=\"limit\" cols=\"50\" bind:value={failedOutput} />\n      </div>\n    {/if}\n  {/if}\n</div>\n\n<style>\n  .container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    flex-basis: auto;\n    align-items: center;\n    align-content: center;\n  }\n  .label {\n    margin: 10px 0 10px 0;\n    font-weight: bold;\n    text-align: center;\n  }\n  .input {\n    grid-row: 1;\n    height: 2.2em;\n    width: 15rem;\n  }\n  .pure-button-primary {\n    border-radius: 12px;\n    margin: 10px 0 10px 0;\n    width: 15rem;\n  }\n  .pure-button-group {\n    margin: 0 0 10px 0;\n    justify-content: stretch;\n    border-radius: 12px;\n    width: 15rem;\n  }\n\n  .toggle-button {\n    font-size: 90%;\n    background-color: #005db3;\n    color: #333;\n    width: 50%;\n  }\n  .active {\n    font-size: 100%;\n    color: white;\n    background-color: #0078e7;\n  }\n\n  .form-label {\n    margin: 10px 0 10px 0;\n    font-weight: normal;\n    text-align: center;\n  }\n  #public-button {\n    border-radius: 12px 0 0 12px;\n  }\n\n  #private-button {\n    border-radius: 0 12px 12px 0;\n  }\n\n  #song-output {\n    /* height: 10em;\n\t\twidth: 95vw; */\n    height: 6rem;\n    width: 15rem;\n  }\n</style>\n","<script>\n  import LastFmForm from \"./components/LastFmForm.svelte\";\n  import StreamingLogin from \"./components/StreamingLogin.svelte\";\n  import CreatePlaylist from \"./components/CreatePlaylist.svelte\";\n  import { timeRange, token, tokenExpired, trackdata } from \"./stores.js\";\n</script>\n\n<div id=\"app\">\n  <div id=\"head\">\n    <h2 style=\"text-align: center\">last.fm to spotify playlist</h2>\n  </div>\n\n  <main id=\"main\">\n    {#if !$token || $tokenExpired}\n      <StreamingLogin />\n    {:else if !$trackdata}\n      <LastFmForm />\n    {:else if $token && $trackdata}\n      <CreatePlaylist />\n    {/if}\n  </main>\n\n  <footer id=\"footer\">\n    <a href=\"https://github.com/leorehm/lastfm-spotify\" target=\"_blank\">\n      <i class=\"fa-brands fa-github\" /> Source\n    </a>\n  </footer>\n</div>\n\n<style>\n  h2 {\n    text-align: center;\n  }\n  a {\n    text-align: center;\n    color: white;\n    text-decoration: none;\n    text-decoration-color: white;\n  }\n  a:hover {\n    text-decoration: underline;\n  }\n  #app {\n    display: flex;\n    flex-direction: column;\n    min-height: 100%;\n  }\n  #footer {\n    text-align: center;\n    margin: 10px;\n    font-size: 0.9em;\n  }\n  #main {\n    flex-grow: 1;\n  }\n</style>\n","import App from './App.svelte';\n\nvar app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","undefined","unsub","subscribe","unsubscribe","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","set_input_value","input","select_option","select","mounting","i","length","option","__value","selected","selectedIndex","toggle_class","toggle","classList","current_component","set_current_component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","e","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","d","ensure_array_like","array_like_or_iterator","Array","from","create_component","mount_component","m","new_on_destroy","on_mount","map","filter","destroy_component","detaching","filtered","targets","indexOf","flush_render_callbacks","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","childNodes","children","l","intro","SvelteComponent","$$set","$destroy","this","$on","type","index","splice","$set","obj","keys","window","__svelte","v","subscriber_queue","readable","start","writable","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","size","token","hashParams","r","q","location","hash","substring","exec","decodeURIComponent","access_token","history","pushState","appUrl","tokenExpired","trackdata","call","button0","button0_disbaled_value","div4","form","div0","label0","input0","br0","div1","label1","input1","br1","div2","label2","br2","div3","label3","textarea","button1","preventDefault","iterations","apiKey","__trackdata","chosenPeriod","limit","output","nextButtonDisabled","$$invalidate","username","res","url","fetch","response","ok","json","Error","toptracks","track","catch","error","console","log","fetchLfmData","toString","artist","$trackdata","selected_option","querySelector","select_value","button","br","label","section","create_if_block_1","create_if_block","URL","state","possible","charAt","Math","floor","random","generateRandomString","rememberMe","params","URLSearchParams","response_type","show_dialog","client_id","scope","redirect_uri","$appUrl","loginLink","checked","if_block","div","key","important","style","removeProperty","setProperty","button2","once","spotInsertRest","user_id","playlistInfo","playlistName","playlistDesc","playlistScope","playlistLink","message","failedTracksIndices","failedOutput","getSongId","async","string","replace","transformStringForSpotify","accessToken","$token","id","method","headers","Authorization","tracks","items","uri","getUser","body","JSON","stringify","public","description","indexesNeeded","ids","j","songId","uris","external_urls","spotify","plural","addToPlaylist","main","footer"],"mappings":"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"}